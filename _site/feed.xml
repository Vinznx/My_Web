<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://localhost:4000/My_Web/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/My_Web/" rel="alternate" type="text/html" /><updated>2020-03-19T13:43:52-04:00</updated><id>http://localhost:4000/My_Web/feed.xml</id><title type="html">Ningxiao Zhang’s Website</title><subtitle>This is my website including my interesting projects.</subtitle><entry><title type="html">Kaggle: Machine Learning from Disaster (Binary Classification)</title><link href="http://localhost:4000/My_Web/posts/machine-learning-from-disaster/" rel="alternate" type="text/html" title="Kaggle: Machine Learning from Disaster (Binary Classification)" /><published>2020-03-16T17:28:03-04:00</published><updated>2020-03-16T17:28:03-04:00</updated><id>http://localhost:4000/My_Web/posts/machine-learning-from-disaster</id><content type="html" xml:base="http://localhost:4000/My_Web/posts/machine-learning-from-disaster/">&lt;p&gt;This is a Kaggle competition for a binary classification problem. You are asked to build a predictive model that can predict if a passenger or crew survived or not in the most infamous shipwreck – The sinking of the Titanic. Your prediction is based on the passenger data (such as name, age, gender, socio-economic class, etc). I am going to use this project to indicate how I deal with binary classification problem.&lt;/p&gt;

&lt;p&gt;I am going to generate models as follows:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;#Prepare-data&quot;&gt;Prepare data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#perform-eda&quot;&gt;Perform exploratory data analysis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#model-data&quot;&gt;Model data&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#submit-res&quot;&gt;Submit result&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Import packages&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.pyplot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;Prepare-data&quot;&gt;1.Prepare data&lt;/h2&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.read_csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'data/train.csv'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;df_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.read_csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'data/test.csv'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Both train and test data have the same data structure. The train data has 12 columns: PassengerId, Survived, Pclass, Name, Sex, Age, SibSp, Parch, Ticket, Fare, Cabin, Embarked. The test data has similar columns except Survived which is the value we need to predict.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.head&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/data.png&quot; alt=&quot;data&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;df_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.info&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/train_info.png&quot; alt=&quot;train_info&quot; width=&quot;350&quot; /&gt;&lt;img src=&quot;../../assets/img/titanic/test_info.png&quot; alt=&quot;test_info&quot; width=&quot;350&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From the information above, in the train data the column ‘Age’, column ‘Cabin’, and column ‘Embarked’ have missing data and in the test data the column ‘Age’, column ‘Fare’, and column ‘Cabin’ have missing data.&lt;/p&gt;

&lt;p&gt;1) Extract useful columns to new data frame&lt;/p&gt;

&lt;p&gt;The passenger ID and Name are two columns that just for identify the person and might have few impact to our binary classification. Thus, I drop both of these two columns. The ticket and Cabin information can be represented by Fare and Embarked. So I also drop these two columns.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;df_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.copy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;drop_columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'PassengerId'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Ticket'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Cabin'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;drop_columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;drop_columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;2) Check if there is any unreasonable data point&lt;/p&gt;

&lt;p&gt;Sometimes a data set might have a wrong data (For example, a person with age 1000). To prevent this, we need to have a quick check of the data first. And our data looks good in this checking.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.describe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.describe&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/train_describe.png&quot; alt=&quot;train_info&quot; width=&quot;400&quot; /&gt;&lt;img src=&quot;../../assets/img/titanic/test_describe.png&quot; alt=&quot;test_info&quot; width=&quot;300&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Fill Nan value with reasonable value&lt;/p&gt;

&lt;p&gt;I fill the nan value in Age and Fare as the mean age and fare of all the customers in each data set. And I fill the Embarked with the mode value.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fillna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fillna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fillna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Fare'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fillna&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Fare'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;4) Data encoding&lt;/p&gt;

&lt;p&gt;Some of the columns, like ‘Sex’ and ‘Embarked’, are not numerical data which might be hard to read by some models. Thus, I convert them with numbers by label encoding/one-hot encoding.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;LabelEncoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;onehot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;OneHotEncoder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;sparse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex_Code'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.reshape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;onehot&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.unique&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex_Code'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.reshape&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;onehot&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit_transform&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;integer_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.unique&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.join&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;onehot_encoded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.drop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Sex'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Embarked'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After these these steps, I prepared a data set with fully filled numerical data in useful columns for exploratory data analysis.&lt;/p&gt;

&lt;h2 id=&quot;perform-eda&quot;&gt;2.Perform exploratory data analysis&lt;/h2&gt;

&lt;p&gt;1) Extract new features&lt;/p&gt;

&lt;p&gt;SibSp and Parch are two columns that represent family size. So I add an additional column Family as the sum of these two columns.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Family'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'SibSp'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Parch'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Family'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'SibSp'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]+&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Parch'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;2) Visualize the data&lt;/p&gt;

&lt;p&gt;To see the relationship between the dependent variable and each predictor, I made plots to show the percentage of survivors in each category.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/visualize.png&quot; alt=&quot;visualize&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;p&gt;3) Check correlation&lt;/p&gt;

&lt;p&gt;Before we fit the model, we need to check if there is any correlation between each feature.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;correlation_heatmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.subplots&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;figsize&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;colormap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.diverging_palette&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;220&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as_cmap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.heatmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;df&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.corr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;cmap&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;colormap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;square&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;cbar_kws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'shrink':.9&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;ax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;annot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;linewidths&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;vmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;linecolor&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'white'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;annot_kws&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;'fontsize':12&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Correlation of Features'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.05&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;correlation_heatmap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/correlation.png&quot; alt=&quot;correlation&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;model-data&quot;&gt;3.Model data&lt;/h2&gt;

&lt;p&gt;There is no best model for different project. So I apply models and compare with them to pick up the best one. In this section, I use the script from LD Freeman on Kaggle to show the fitting result from different models.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;MLA&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;#Ensemble&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Methods&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.AdaBoostClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.BaggingClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.ExtraTreesClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.GradientBoostingClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.RandomForestClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#Gaussian&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Processes&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;gaussian_process&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.GaussianProcessClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#GLM&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.LogisticRegressionCV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.PassiveAggressiveClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.RidgeClassifierCV&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.SGDClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;linear_model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.Perceptron&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#Navies&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Bayes&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;naive_bayes&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.BernoulliNB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;naive_bayes&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.GaussianNB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#Nearest&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Neighbor&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;neighbors&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.KNeighborsClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#SVM&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.SVC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;probability&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.NuSVC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;probability&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;svm&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.LinearSVC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#Trees&lt;/span&gt;    
    &lt;span class=&quot;nt&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.DecisionTreeClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;tree&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.ExtraTreeClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#Discriminant&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;Analysis&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;discriminant_analysis&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.LinearDiscriminantAnalysis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;discriminant_analysis&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.QuadraticDiscriminantAnalysis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;#xgboost&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;XGBClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;    
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Pclass'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Age'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'SibSp'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Parch'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Fare'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Sex_Code'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'S'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'C'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Q'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Family'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'Survived'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;MLA_columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'MLA Name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'MLA Train Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'MLA Test Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.DataFrame&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;columns&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;MLA_columns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;cv_split&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;model_selection&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.ShuffleSplit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;n_splits&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;test_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;train_size&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;.6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;random_state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;row_index&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;MLA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;cv_results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;model_selection&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.cross_validate&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cv&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cv_split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;return_train_score&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nt&quot;&gt;MLA_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.__class__.__name__&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;row_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'MLA Name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;MLA_name&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;row_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'MLA Train Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cv_results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'train_score'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.loc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;row_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'MLA Test Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;cv_results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'test_score'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.mean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;   
    &lt;span class=&quot;nt&quot;&gt;row_index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.sort_values&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'MLA Test Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ascending&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;inplace&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;sns&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.barplot&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'MLA Test Accuracy Mean'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'MLA Name'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;MLA_compare&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;color&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;'m'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.title&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Machine Learning Algorithm Accuracy Score \n'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.xlabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Accuracy Score (%)'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.ylabel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Algorithm'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/img/titanic/model.png&quot; alt=&quot;model&quot; width=&quot;800&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;submit-res&quot;&gt;4.Submit result&lt;/h2&gt;

&lt;p&gt;After we figure out the best model for this test now. We use the model to predict the test sample and generate the predict result.&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;ensemble&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.GradientBoostingClassifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;data_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;df_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Survived'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;alg&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.predict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;data_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;res&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;df_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'PassengerId'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Survived'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.to_csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&quot;res.csv&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Ningxiao Zhang</name></author><summary type="html">This is a Kaggle competition for a binary classification problem. You are asked to build a predictive model that can predict if a passenger or crew survived or not in the most infamous shipwreck – The sinking of the Titanic. Your prediction is based on the passenger data (such as name, age, gender, socio-economic class, etc). I am going to use this project to indicate how I deal with binary classification problem.</summary></entry><entry><title type="html">Kaggle: Neural Network For Digit Recognizer</title><link href="http://localhost:4000/My_Web/posts/neural-network-for-digit-recognizer/" rel="alternate" type="text/html" title="Kaggle: Neural Network For Digit Recognizer" /><published>2019-06-25T08:00:00-04:00</published><updated>2019-06-25T08:00:00-04:00</updated><id>http://localhost:4000/My_Web/posts/Neural-Network-For-Digit-Recognizer</id><content type="html" xml:base="http://localhost:4000/My_Web/posts/neural-network-for-digit-recognizer/">&lt;p&gt;Neural Network has been successfully used in digit recognizer. And it is very easy to just apply some packages like tensorflow. However, it requires some tips in analyzing the data to get a better result. Here I am writing a demonstration of how to improve the accuracy of my neural network code from 70% to 99%.&lt;/p&gt;

&lt;h1 id=&quot;include-packages&quot;&gt;Include packages&lt;/h1&gt;
&lt;p&gt;The TensorFlow version is 1.13.1&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;matplotlib&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;inline&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;matplotlib&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.pyplot&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;plt&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tensorflow&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pandas&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;sklearn&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.model_selection&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;train_test_split&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;download-data&quot;&gt;Download data&lt;/h1&gt;
&lt;p&gt;The data used in this demonstration is from Kaggle  &lt;a href=&quot;https://www.kaggle.com/c/digit-recognizer/data&quot;&gt;https://www.kaggle.com/c/digit-recognizer/data&lt;/a&gt;. The training sample is saved as ‘train.csv’ under the data folder.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;pd&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.read_csv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'data/train.csv'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;df_tr_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.iloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:]&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;df_tr_label&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;df_train&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.iloc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[:,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The size of this training sample is 42,000.&lt;/p&gt;

&lt;h1 id=&quot;data-details&quot;&gt;Data details&lt;/h1&gt;
&lt;p&gt;Each image is a 28 x 28 pixels image, the number of colour channels is 1 (gray-scale), and there are 10 classes represent digit 0 to 9. Here are three images from this data set with label of digit 1, digit 0 and digit 4.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/img/nn_img1.png&quot; alt=&quot;nn_img1&quot; width=&quot;200&quot; /&gt;
&lt;img src=&quot;../../assets/img/nn_img2.png&quot; alt=&quot;nn_img2&quot; width=&quot;200&quot; /&gt;
&lt;img src=&quot;../../assets/img/nn_img3.png&quot; alt=&quot;nn_img3&quot; width=&quot;200&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;split-data-for-training-and-testing&quot;&gt;Split data for training and testing&lt;/h1&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y_test&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;nt&quot;&gt;train_test_split&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;df_tr_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;df_tr_label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;test_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.33&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;random_stat&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;a-simple-2-layers-neural-network&quot;&gt;A simple 2-layers neural network&lt;/h1&gt;
&lt;p&gt;This simple neural network’s core only has 7 lines in total and it can help your model to reach an accuracy of 70%. This part is the core of the whole neural network with three components. First, you need to write the flow of the model. Here I just choose two layers with 256 and 128 nodes, respectively, and use relu function as the activation. Second, you need to set the optimizer and loss function. The last one is just fit the model.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.keras.models.Sequential&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.keras.layers.Flatten&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.keras.layers.Dense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.nn.relu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.keras.layers.Dense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.nn.relu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.keras.layers.Dense&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;activation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;tf&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.nn.softmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.compile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;optimizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'adam'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;loss&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'sparse_categorical_crossentropy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;metrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'accuracy'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.fit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y_train&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;epochs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;evaluate-the-result&quot;&gt;Evaluate the result&lt;/h1&gt;
&lt;p&gt;The result of this method is evaluated by an accuracy.&lt;/p&gt;
&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;predictions&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.predict&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;x_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;])&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;correct&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.equal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.argmax&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;predictions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;axis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;y_test&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;accuracy&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;np&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.sum&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;correct&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;predictions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;'Accuracy of the model on test sample is:'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;accuracy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>Ningxiao Zhang</name></author><summary type="html">Neural Network has been successfully used in digit recognizer. And it is very easy to just apply some packages like tensorflow. However, it requires some tips in analyzing the data to get a better result. Here I am writing a demonstration of how to improve the accuracy of my neural network code from 70% to 99%.</summary></entry><entry><title type="html">Built My Own Website By Using Jekyll</title><link href="http://localhost:4000/My_Web/posts/build-my-own-website/" rel="alternate" type="text/html" title="Built My Own Website By Using Jekyll" /><published>2019-05-23T08:57:03-04:00</published><updated>2019-05-23T08:57:03-04:00</updated><id>http://localhost:4000/My_Web/posts/build-my-own-website</id><content type="html" xml:base="http://localhost:4000/My_Web/posts/build-my-own-website/">&lt;p&gt;I have been thinking of building my own website for years. Hyper Text Makeup Language (HTML) is the standard markup language for creating web pages. In addition to HTML, you also need to learn Cascading Style Sheets (CSS) and JavaScript to form a functional website. This is a big learning challenge for me who just want to learn how to make a functional personal website. Recently, there are some good websites like “Wix” helps users to create Websites through the use of online drag and drop tools. This makes it easy and quick to build up a website just like making PowerPoint slides. However, the fact that few free themes and limited adjustments does not meet my requirements.&lt;/p&gt;

&lt;p&gt;Luckily, I found a website design YouTube tutorial for beginners by Mike Dane. He used Jekyll to program the website. Jekyll is a simple, blog-aware, static site generator for personal, project, or organization sites. Jekyll is very similar to another software that I used in writing my papers – Latex. You can apply a beautiful free theme by one line command and then include your contents in a markdown formation which is friendly for including math equations in my research. There are thousands free Jekyll themes published online. And it is also easy to adjust the theme for your personal use. Moreover, it is easy to post your website on GitHub for free. Jekyll is kind of a compromise way between building website all by yourself and using a simple limited template.&lt;/p&gt;

&lt;p&gt;Griaffe Academy has a series of videos that will help you to learn the basics of using Jekyll. If you want to have a fully understanding of Jekyll including installing, setting, and using complex features, here is the link of the YouTube tutorial:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/T1itpPvFWHI&quot;&gt;&lt;img src=&quot;../../assets/img/Jekyll.jpg&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;If your are just looking for a simple and free way to build your own customized website, here are some steps that I used to setup my website on my MacOS system with the terminal commands.&lt;/p&gt;

&lt;h1 id=&quot;1setting-environment-macos-version-10145&quot;&gt;1.Setting Environment (MacOS Version 10.14.5):&lt;/h1&gt;

&lt;p&gt;You need to use Ruby to install Jekyll. The MacOS system usually installs Ruby as default. The requirement of Ruby for Jekyll is version 2.4.0 or above.  Type &lt;code class=&quot;highlighter-rouge&quot;&gt;ruby -v&lt;/code&gt; in the terminal to check the version of the Ruby on your laptop.&lt;/p&gt;

&lt;p&gt;I found it does not meet the requirement. I used &lt;code class=&quot;highlighter-rouge&quot;&gt;brew install ruby&lt;/code&gt; to update my Ruby to the newest version (ruby 2.6.3p62).&lt;/p&gt;

&lt;p&gt;Then, install bundler and jekyll by using &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo gem install bundler jekyll&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;2create-a-jekyll-website&quot;&gt;2.Create A Jekyll Website:&lt;/h1&gt;

&lt;p&gt;Find a place in your computer to put your website folder. Move into the folder through the terminal. Then, created a new folder (I named it “My_Web”.) to save all the files for your website by using &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll new My_Web&lt;/code&gt;. This is a command initialling website files for you and putting them in this new folder.&lt;/p&gt;

&lt;p&gt;To edit this website, you need to move into this new folder. The home page is saved in the “index.md” file. The blogs are saved under “posts” folder with markdown formate. You can edit them in any document editor on your computer (I used Atom).&lt;/p&gt;

&lt;p&gt;To check your website locally on your own computer, you need to move into the folder you just created in the terminal. And type in &lt;code class=&quot;highlighter-rouge&quot;&gt;bundle exec jekyll serve&lt;/code&gt;. Then you can check your website locally on the Safari with the server address showing in your terminal, something like “127.0.0.1:4000/My_Web/”.&lt;/p&gt;

&lt;h1 id=&quot;3host-a-website-on-github&quot;&gt;3.Host A Website On GitHub:&lt;/h1&gt;

&lt;p&gt;It is easy and free to publish a website which is created by Jekyll if you already have a GitHub account. You just need to create a new repository in you GitHub and clone it to your computer. Then, copy and paste all the website files into this local repository. Sync your local repository with the remote repository and your will find your website address in the setting of your GitHub repository.&lt;/p&gt;

&lt;p&gt;If you have any question about building your website, please feel free to ask me through my email. Good luck and have fun!&lt;/p&gt;</content><author><name>Ningxiao Zhang</name></author><summary type="html">I have been thinking of building my own website for years. Hyper Text Makeup Language (HTML) is the standard markup language for creating web pages. In addition to HTML, you also need to learn Cascading Style Sheets (CSS) and JavaScript to form a functional website. This is a big learning challenge for me who just want to learn how to make a functional personal website. Recently, there are some good websites like “Wix” helps users to create Websites through the use of online drag and drop tools. This makes it easy and quick to build up a website just like making PowerPoint slides. However, the fact that few free themes and limited adjustments does not meet my requirements.</summary></entry></feed>